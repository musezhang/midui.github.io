{"meta":{"title":"musezhang的一亩三分地","subtitle":null,"description":"To do something","author":"muse zhang","url":"http://yoursite.com"},"pages":[{"title":"分类","date":"2017-07-29T08:11:05.000Z","updated":"2017-07-29T08:11:29.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"关于我","date":"2017-07-29T08:29:47.000Z","updated":"2017-07-29T08:33:03.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"I am a PHP programmer working at Weibo."},{"title":"标签","date":"2017-07-29T08:08:46.000Z","updated":"2017-07-29T08:10:30.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"必须好用的git命令2","slug":"useful-git-command-2","date":"2017-07-30T07:30:54.000Z","updated":"2017-07-30T07:50:04.000Z","comments":true,"path":"2017/07/30/useful-git-command-2/","link":"","permalink":"http://yoursite.com/2017/07/30/useful-git-command-2/","excerpt":"说明此文件是为了留底，找时间排查原因，在增加内容就无法渲染的问题并且上个blog不知是什么原因，再多加代码段就会报错。 git设置颜色高亮显示1git config --global color.ui true git 命令别名设置1git config --global alias.br branch","text":"说明此文件是为了留底，找时间排查原因，在增加内容就无法渲染的问题并且上个blog不知是什么原因，再多加代码段就会报错。 git设置颜色高亮显示1git config --global color.ui true git 命令别名设置1git config --global alias.br branch 查看git提交日志1git log 查看最近的提交内容123git show #最近一次git show HEAD^ #往前推一次,等于git show HEAD~1 git show HEAD^^ #往前推两次,等于git show HEAD~2 找到规律的同学应该知道怎么看更早之前的记录了 一次加入所有修改，包括delete12git add -u #一次加入所有被修改的内容，包含 modified 及 deletedgit add --update #同上 移动文件或重命名12git mv my_folder/numbers.txt . #将my_folder/numbers.txt文件移动到当前目录,文件名不变git mv numbers.txt num.txt #修改文件名 Git将”尚未被提交”的内容分成三种类型，分別是 Changes to be committed（将要提交的内容） Changes not staged for commit（被修改但未提交） Untracked files（没有如版本库的文件） 撤销修改 变回未修改状态 1git checkout -- &lt;file&gt; 回到未提交状态 1git reset HEAD &lt;file&gt; 回到指定版本12345git log --oneline #显示log日志，但只显示commit id和提交描述a2ba80 First commit80635e7 增加index.html文件c65ef5e Create README.md 选择commit id 使用下述命令回到指定版本 1git reset --hard 5a2ba80 查看git历史修改记录1234git reflog #查看所有记录80635e7 HEAD@&#123;2&#125;: commit: 增加index.html文件 #三列;1是commit id;2是short name;3是描述git show &lt;commit id&gt; #查看指定记录git show &lt;short name&gt; #同上 修改提交说明信息(慎用)12git commit --amend #使用后进入 vim 编辑,保存后即可git commit --amend -m &lt;message&gt; #直接编辑提交说明 分支管理创建并删除分支1234git branch developgit checkout -b &lt;new branch name&gt; #建立分支并切换到该分支git branch -f &lt;new branch name&gt; &lt;commit id&gt; #在指定版本上建立分支git branch -D &lt;branch name&gt; #删除分支 修改远程分支名称一般来说，我们主要的分支都是origin，但其实这个名字是可以改的1git remote rename origin github 上传分支需改1git push &lt;remote name&gt; &lt;branch name&gt; 删除远端分支1git push &lt;remote name&gt; :&lt;branch name&gt; 查看分支12git branch #只看本地分支git branch -a #查看本地及远程分支 版本暂存12345678git stash #暂存目前修改的内容git stash list # 列出所有暂存的内容git show stash@&#123;0&#125; #显示暂存内容的详情git stash pop #取出最近一次暂存的内容git stash pop stash@&#123;n&#125; #取出指定的暂存内容git stash drop #删除暂存的内容git stash drop stash@&#123;n&#125; #删除指定的暂存内容git stash clear #清空暂存区 子模块添加子模块如果我们用到外部依赖的库的时候，通常需要使用子模块来实现 1git submodule add git@github.com:jquery/jquery.git jquery #添加jquery作为子模块 初始化子模块使用子模块的项目在clone出新的项目后，必须初始化子模块内容12git submodule initgit submodule update 在clone的时候加上--recursive可以直接完成子模块的初始化1git clone --recursive git@github.com:zlargon/git-test.git 字数限制？往后无法添加内容","categories":[],"tags":[]},{"title":"必须好使的git命令","slug":"useful-git-command","date":"2017-07-29T09:04:58.000Z","updated":"2017-07-30T07:48:37.000Z","comments":true,"path":"2017/07/29/useful-git-command/","link":"","permalink":"http://yoursite.com/2017/07/29/useful-git-command/","excerpt":"git设置颜色高亮显示1git config --global color.ui true git 命令别名设置1git config --global alias.br branch","text":"git设置颜色高亮显示1git config --global color.ui true git 命令别名设置1git config --global alias.br branch 查看git提交日志1git log 查看最近的提交内容123git show #最近一次git show HEAD^ #往前推一次,等于git show HEAD~1 git show HEAD^^ #往前推两次,等于git show HEAD~2 找到规律的同学应该知道怎么看更早之前的记录了 一次加入所有修改，包括delete12git add -u #一次加入所有被修改的内容，包含 modified 及 deletedgit add --update #同上 移动文件或重命名12git mv my_folder/numbers.txt . #将my_folder/numbers.txt文件移动到当前目录,文件名不变git mv numbers.txt num.txt #修改文件名 Git将”尚未被提交”的内容分成三种类型，分別是 Changes to be committed（将要提交的内容） Changes not staged for commit（被修改但未提交） Untracked files（没有如版本库的文件） 撤销修改 变回未修改状态 1git checkout -- &lt;file&gt; 回到未提交状态 1git reset HEAD &lt;file&gt; 回到指定版本12345git log --oneline #显示log日志，但只显示commit id和提交描述a2ba80 First commit80635e7 增加index.html文件c65ef5e Create README.md 选择commit id 使用下述命令回到指定版本 1git reset --hard 5a2ba80 查看git历史修改记录1234git reflog #查看所有记录80635e7 HEAD@&#123;2&#125;: commit: 增加index.html文件 #三列;1是commit id;2是short name;3是描述git show &lt;commit id&gt; #查看指定记录git show &lt;short name&gt; #同上 分支管理创建并删除分支1234git branch developgit checkout -b &lt;new branch name&gt; #建立分支并切换到该分支git branch -f &lt;new branch name&gt; &lt;commit id&gt; #在指定版本上建立分支git branch -D &lt;branch name&gt; #删除分支 修改远程分支名称一般来说，我们主要的分支都是origin，但其实这个名字是可以改的1git remote rename origin github 上传分支需改1git push &lt;remote name&gt; &lt;branch name&gt; 删除远端分支1git push &lt;remote name&gt; :&lt;branch name&gt; 查看分支12git branch #只看本地分支git branch -a #查看本地及远程分支 版本暂存12345678git stash #暂存目前修改的内容git stash list # 列出所有暂存的内容git show stash@&#123;0&#125; #显示暂存内容的详情git stash pop #取出最近一次暂存的内容git stash pop stash@&#123;n&#125; #取出指定的暂存内容git stash drop #删除暂存的内容git stash drop stash@&#123;n&#125; #删除指定的暂存内容git stash clear #清空暂存区 子模块添加子模块如果我们用到外部依赖的库的时候，通常需要使用子模块来实现 1git submodule add git@github.com:jquery/jquery.git jquery #添加jquery作为子模块 初始化子模块使用子模块的项目在clone出新的项目后，必须初始化子模块内容12git submodule initgit submodule update 在clone的时候加上--recursive可以直接完成子模块的初始化1git clone --recursive git@github.com:zlargon/git-test.git 删除子模块 删除子模块rm -rf &lt;submodule path&gt; 刪除.gitmodules 里边的submodule设置 提交修改 刪除 .git/config 里面的submodule 设置内容 刪除 .git/modules/里边的内容 参考资料 Git使用说明","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://yoursite.com/tags/Git/"}]},{"title":"一些小技巧","slug":"some_tips","date":"2017-07-29T08:47:18.000Z","updated":"2017-07-29T09:06:52.000Z","comments":true,"path":"2017/07/29/some_tips/","link":"","permalink":"http://yoursite.com/2017/07/29/some_tips/","excerpt":"","text":"macos设置从终端启动sublime alias subl=\\’’/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl’\\’ 说明：其实就是设置了一个别名 to be continue……","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}],"tags":[{"name":"tips","slug":"tips","permalink":"http://yoursite.com/tags/tips/"}]},{"title":"My First Hexo blog","slug":"My-First-Hexo-blog","date":"2017-07-28T16:42:08.000Z","updated":"2017-07-29T08:37:46.000Z","comments":true,"path":"2017/07/29/My-First-Hexo-blog/","link":"","permalink":"http://yoursite.com/2017/07/29/My-First-Hexo-blog/","excerpt":"随便说说时间是2017年07月29日14:39:40，12个小时前，终于在github上创建了自己的的博客站，内容呢还处于什么都没有的阶段。所以在12个小时候现在，赶紧写下第一篇blog。","text":"随便说说时间是2017年07月29日14:39:40，12个小时前，终于在github上创建了自己的的博客站，内容呢还处于什么都没有的阶段。所以在12个小时候现在，赶紧写下第一篇blog。 正文其实第一篇也没什么好说的，以后就加油吧，希望能多在这上边记录一些东西。算是对自己成长的记录吧","categories":[{"name":"个人","slug":"个人","permalink":"http://yoursite.com/categories/个人/"}],"tags":[{"name":"houhou","slug":"houhou","permalink":"http://yoursite.com/tags/houhou/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-28T16:36:58.000Z","updated":"2017-07-29T08:36:29.000Z","comments":true,"path":"2017/07/29/hello-world/","link":"","permalink":"http://yoursite.com/2017/07/29/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}